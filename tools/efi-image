#! /bin/sh
set -e

# Make an EFI boot image.

if [ -z "$1" ] || [ -z "$2" ]; then
	echo "usage: $0 OUTPUT-DIRECTORY GRUB-PLATFORM EFI-NAME"
	exit 1
fi

outdir="$1"
platform="$2"
efi_name="$3"

memdisk_img=
workdir=

cleanup () {
	[ -z "$memdisk_img" ] || rm -f "$memdisk_img"
	[ -z "$workdir" ] || rm -rf "$workdir"
}
trap cleanup EXIT HUP INT QUIT TERM

rm -rf "$outdir"
mkdir -p "$outdir"

memdisk_img="$(mktemp efi-image.XXXXXX)"
workdir="$(mktemp -d efi-image.XXXXXX)"

# Skeleton configuration file which finds the real boot disk.
mkdir -p "$workdir/boot/grub"
cat >"$workdir/boot/grub/grub.cfg" <<EOF
search --file --set=root /.disk/info
set prefix=(\$root)/boot/grub/$platform
source \$prefix/grub.cfg
EOF

mkdir -p "$outdir/boot/grub/$platform"
(for i in $(cat /usr/lib/grub/$platform/partmap.lst); do
	echo "insmod $i"
 done; \
 echo "source /boot/grub/grub.cfg") >"$outdir/boot/grub/$platform/grub.cfg"

# Build the core image.
(cd "$workdir"; tar -cf - boot) >"$memdisk_img"
grub-mkimage -O "$platform" -m "$memdisk_img" \
	-o "$workdir/boot$efi_name.efi" -p '(memdisk)/boot/grub' \
	search iso9660 configfile normal memdisk tar part_msdos fat

# Stuff it into a FAT filesystem, making it as small as possible.  24KiB
# headroom seems to be enough; (x+31)/32*32 rounds up to multiple of 32.
mkfs.msdos -C "$outdir/efi.img" \
	$(( ($(stat -c %s "$workdir/boot$efi_name.efi") / 1024 + 55) \
	    / 32 * 32 ))
mmd -i "$outdir/efi.img" ::efi
mmd -i "$outdir/efi.img" ::efi/boot
mcopy -i "$outdir/efi.img" "$workdir/boot$efi_name.efi" \
	"::efi/boot/boot$efi_name.efi"

# Copy over GRUB modules, except for those already built in.
cp -a "/usr/lib/grub/$platform"/*.lst "$outdir/boot/grub/$platform/"
for x in "/usr/lib/grub/$platform"/*.mod; do
	# TODO: Some of these exclusions are based on knowledge of module
	# dependencies.  It would be nice to have a way to read the module
	# list directly out of the image.
	case $(basename "$x" .mod) in
	    configfile|extcmd|fshelp|iso9660|memdisk|normal|search|search_fs_file|search_fs_uuid|search_label|tar)
		# included in bootx86.efi
		;;
	    affs|afs|afs_be|befs|befs_be|minix|nilfs2|sfs|zfs|zfsinfo)
		# unnecessary filesystem modules
		;;
	    example_functional_test|functional_test|hello)
		# other cruft
		;;
	    *)
		cp -a "$x" "$outdir/boot/grub/$platform/"
		;;
	esac
done

exit 0
